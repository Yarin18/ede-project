name: Build and deliver containers

on: push

jobs:
  workoutplanservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver workout-plan-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt

      - name: Build, test, and package project
        working-directory: ./workout-plan-service
        run: mvn package -DskipTests

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/workout-plan-service:latest ./workout-plan-service

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/workout-plan-service:latest

  nutritionservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver nutrition-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt

      - name: Build, test, and package project
        working-directory: ./nutrition-service
        run: mvn package -DskipTests

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/nutrition-service:latest ./nutrition-service

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/nutrition-service:latest

  userservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver user-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          cache: maven
          distribution: adopt

      - name: Build, test, and package project
        working-directory: ./user-service
        run: mvn package -DskipTests

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/user-service:latest ./user-service

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/user-service:latest
  apigatewayservice:
      runs-on: ubuntu-latest
      name: Java 17 build, test, deliver api-gateway-service container
      steps:
        - name: Check out repository
          uses: actions/checkout@v3

        - name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            java-version: 17
            cache: maven
            distribution: adopt

        - name: Build, test, and package project
          working-directory: ./api-gateway-service
          run: mvn package -DskipTests

        - name: Docker login
          run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

        - name: Docker Build
          run: docker build -t ${{ secrets.DOCKER_USER }}/api-gateway-service:latest ./api-gateway-service

        - name: Upload container to Docker Hub with Push
          run: docker push ${{ secrets.DOCKER_USER }}/api-gateway-service:latest
  ede_frontend:
    runs-on: ubuntu-latest
    name: Build and deliver ede-frontend container
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Build Angular project
        working-directory: ./ede-frontend/ede-frontend
        run: |
          npm install -g @angular/cli    
          npm install                    
          ng build --prod             

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/ede-frontend:latest ./ede-frontend

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/ede-frontend:latest

